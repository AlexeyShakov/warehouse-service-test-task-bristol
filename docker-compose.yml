services:
  nginx:
    image: nginx:stable
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app

  app:
    container_name: warehouse_api
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_healthy
      warehouse_state_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    env_file:
      - .env
    volumes:
      - .:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  warehouse_state_db:
    container_name: warehouse_state_db
    image: mongo:6.0
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: [
      "CMD-SHELL",
      "echo 'db.runCommand({ ping: 1 })' | mongosh -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase=admin admin || exit 1"
    ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    mem_limit: 512m  # Чисто для примера, нужно подстраивать под нужды
    cpus: 0.7        # Чисто для примера, нужно подстраивать под нужды

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.5.0
    restart: on-failure
    environment:
      CLUSTER_ID: ${CLUSTER_ID}
      KAFKA_CLUSTER_ID: ${CLUSTER_ID}
      KAFKA_KRAFT_BROKER_ID: 1
    env_file:
      - .env
    volumes:
      - kafka_data:/var/lib/kafka/data
      - ./kafka_settings/scripts:/scripts
      - ./kafka_settings/kraft.properties:/etc/kafka/kraft.properties
    entrypoint: [ "bash", "-c", "/scripts/kafka-init.sh && kafka-server-start /etc/kafka/kraft.properties" ]
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9092" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    mem_limit: 1g
    cpus: 1.0

volumes:
  mongo_data:
  kafka_data:
